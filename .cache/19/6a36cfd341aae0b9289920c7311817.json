{"id":"../node_modules/polybooljs/lib/segment-chainer.js","dependencies":[{"name":"/home/cassiana/DBO/sociologia-5.0/package.json","includedInParent":true,"mtime":1543792363178},{"name":"/home/cassiana/DBO/sociologia-5.0/node_modules/polybooljs/package.json","includedInParent":true,"mtime":1543792360654}],"generated":{"js":"// (c) Copyright 2016, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n\n//\n// converts a list of segments into a list of regions, while also removing unnecessary verticies\n//\n\nfunction SegmentChainer(segments, eps, buildLog){\n\tvar chains = [];\n\tvar regions = [];\n\n\tsegments.forEach(function(seg){\n\t\tvar pt1 = seg.start;\n\t\tvar pt2 = seg.end;\n\t\tif (eps.pointsSame(pt1, pt2)){\n\t\t\tconsole.warn('PolyBool: Warning: Zero-length segment detected; your epsilon is ' +\n\t\t\t\t'probably too small or too large');\n\t\t\treturn;\n\t\t}\n\n\t\tif (buildLog)\n\t\t\tbuildLog.chainStart(seg);\n\n\t\t// search for two chains that this segment matches\n\t\tvar first_match = {\n\t\t\tindex: 0,\n\t\t\tmatches_head: false,\n\t\t\tmatches_pt1: false\n\t\t};\n\t\tvar second_match = {\n\t\t\tindex: 0,\n\t\t\tmatches_head: false,\n\t\t\tmatches_pt1: false\n\t\t};\n\t\tvar next_match = first_match;\n\t\tfunction setMatch(index, matches_head, matches_pt1){\n\t\t\t// return true if we've matched twice\n\t\t\tnext_match.index = index;\n\t\t\tnext_match.matches_head = matches_head;\n\t\t\tnext_match.matches_pt1 = matches_pt1;\n\t\t\tif (next_match === first_match){\n\t\t\t\tnext_match = second_match;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tnext_match = null;\n\t\t\treturn true; // we've matched twice, we're done here\n\t\t}\n\t\tfor (var i = 0; i < chains.length; i++){\n\t\t\tvar chain = chains[i];\n\t\t\tvar head  = chain[0];\n\t\t\tvar head2 = chain[1];\n\t\t\tvar tail  = chain[chain.length - 1];\n\t\t\tvar tail2 = chain[chain.length - 2];\n\t\t\tif (eps.pointsSame(head, pt1)){\n\t\t\t\tif (setMatch(i, true, true))\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (eps.pointsSame(head, pt2)){\n\t\t\t\tif (setMatch(i, true, false))\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (eps.pointsSame(tail, pt1)){\n\t\t\t\tif (setMatch(i, false, true))\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (eps.pointsSame(tail, pt2)){\n\t\t\t\tif (setMatch(i, false, false))\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (next_match === first_match){\n\t\t\t// we didn't match anything, so create a new chain\n\t\t\tchains.push([ pt1, pt2 ]);\n\t\t\tif (buildLog)\n\t\t\t\tbuildLog.chainNew(pt1, pt2);\n\t\t\treturn;\n\t\t}\n\n\t\tif (next_match === second_match){\n\t\t\t// we matched a single chain\n\n\t\t\tif (buildLog)\n\t\t\t\tbuildLog.chainMatch(first_match.index);\n\n\t\t\t// add the other point to the apporpriate end, and check to see if we've closed the\n\t\t\t// chain into a loop\n\n\t\t\tvar index = first_match.index;\n\t\t\tvar pt = first_match.matches_pt1 ? pt2 : pt1; // if we matched pt1, then we add pt2, etc\n\t\t\tvar addToHead = first_match.matches_head; // if we matched at head, then add to the head\n\n\t\t\tvar chain = chains[index];\n\t\t\tvar grow  = addToHead ? chain[0] : chain[chain.length - 1];\n\t\t\tvar grow2 = addToHead ? chain[1] : chain[chain.length - 2];\n\t\t\tvar oppo  = addToHead ? chain[chain.length - 1] : chain[0];\n\t\t\tvar oppo2 = addToHead ? chain[chain.length - 2] : chain[1];\n\n\t\t\tif (eps.pointsCollinear(grow2, grow, pt)){\n\t\t\t\t// grow isn't needed because it's directly between grow2 and pt:\n\t\t\t\t// grow2 ---grow---> pt\n\t\t\t\tif (addToHead){\n\t\t\t\t\tif (buildLog)\n\t\t\t\t\t\tbuildLog.chainRemoveHead(first_match.index, pt);\n\t\t\t\t\tchain.shift();\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif (buildLog)\n\t\t\t\t\t\tbuildLog.chainRemoveTail(first_match.index, pt);\n\t\t\t\t\tchain.pop();\n\t\t\t\t}\n\t\t\t\tgrow = grow2; // old grow is gone... new grow is what grow2 was\n\t\t\t}\n\n\t\t\tif (eps.pointsSame(oppo, pt)){\n\t\t\t\t// we're closing the loop, so remove chain from chains\n\t\t\t\tchains.splice(index, 1);\n\n\t\t\t\tif (eps.pointsCollinear(oppo2, oppo, grow)){\n\t\t\t\t\t// oppo isn't needed because it's directly between oppo2 and grow:\n\t\t\t\t\t// oppo2 ---oppo--->grow\n\t\t\t\t\tif (addToHead){\n\t\t\t\t\t\tif (buildLog)\n\t\t\t\t\t\t\tbuildLog.chainRemoveTail(first_match.index, grow);\n\t\t\t\t\t\tchain.pop();\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif (buildLog)\n\t\t\t\t\t\t\tbuildLog.chainRemoveHead(first_match.index, grow);\n\t\t\t\t\t\tchain.shift();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.chainClose(first_match.index);\n\n\t\t\t\t// we have a closed chain!\n\t\t\t\tregions.push(chain);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// not closing a loop, so just add it to the apporpriate side\n\t\t\tif (addToHead){\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.chainAddHead(first_match.index, pt);\n\t\t\t\tchain.unshift(pt);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.chainAddTail(first_match.index, pt);\n\t\t\t\tchain.push(pt);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// otherwise, we matched two chains, so we need to combine those chains together\n\n\t\tfunction reverseChain(index){\n\t\t\tif (buildLog)\n\t\t\t\tbuildLog.chainReverse(index);\n\t\t\tchains[index].reverse(); // gee, that's easy\n\t\t}\n\n\t\tfunction appendChain(index1, index2){\n\t\t\t// index1 gets index2 appended to it, and index2 is removed\n\t\t\tvar chain1 = chains[index1];\n\t\t\tvar chain2 = chains[index2];\n\t\t\tvar tail  = chain1[chain1.length - 1];\n\t\t\tvar tail2 = chain1[chain1.length - 2];\n\t\t\tvar head  = chain2[0];\n\t\t\tvar head2 = chain2[1];\n\n\t\t\tif (eps.pointsCollinear(tail2, tail, head)){\n\t\t\t\t// tail isn't needed because it's directly between tail2 and head\n\t\t\t\t// tail2 ---tail---> head\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.chainRemoveTail(index1, tail);\n\t\t\t\tchain1.pop();\n\t\t\t\ttail = tail2; // old tail is gone... new tail is what tail2 was\n\t\t\t}\n\n\t\t\tif (eps.pointsCollinear(tail, head, head2)){\n\t\t\t\t// head isn't needed because it's directly between tail and head2\n\t\t\t\t// tail ---head---> head2\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.chainRemoveHead(index2, head);\n\t\t\t\tchain2.shift();\n\t\t\t}\n\n\t\t\tif (buildLog)\n\t\t\t\tbuildLog.chainJoin(index1, index2);\n\t\t\tchains[index1] = chain1.concat(chain2);\n\t\t\tchains.splice(index2, 1);\n\t\t}\n\n\t\tvar F = first_match.index;\n\t\tvar S = second_match.index;\n\n\t\tif (buildLog)\n\t\t\tbuildLog.chainConnect(F, S);\n\n\t\tvar reverseF = chains[F].length < chains[S].length; // reverse the shorter chain, if needed\n\t\tif (first_match.matches_head){\n\t\t\tif (second_match.matches_head){\n\t\t\t\tif (reverseF){\n\t\t\t\t\t// <<<< F <<<< --- >>>> S >>>>\n\t\t\t\t\treverseChain(F);\n\t\t\t\t\t// >>>> F >>>> --- >>>> S >>>>\n\t\t\t\t\tappendChain(F, S);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t// <<<< F <<<< --- >>>> S >>>>\n\t\t\t\t\treverseChain(S);\n\t\t\t\t\t// <<<< F <<<< --- <<<< S <<<<   logically same as:\n\t\t\t\t\t// >>>> S >>>> --- >>>> F >>>>\n\t\t\t\t\tappendChain(S, F);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\t// <<<< F <<<< --- <<<< S <<<<   logically same as:\n\t\t\t\t// >>>> S >>>> --- >>>> F >>>>\n\t\t\t\tappendChain(S, F);\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif (second_match.matches_head){\n\t\t\t\t// >>>> F >>>> --- >>>> S >>>>\n\t\t\t\tappendChain(F, S);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif (reverseF){\n\t\t\t\t\t// >>>> F >>>> --- <<<< S <<<<\n\t\t\t\t\treverseChain(F);\n\t\t\t\t\t// <<<< F <<<< --- <<<< S <<<<   logically same as:\n\t\t\t\t\t// >>>> S >>>> --- >>>> F >>>>\n\t\t\t\t\tappendChain(S, F);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t// >>>> F >>>> --- <<<< S <<<<\n\t\t\t\t\treverseChain(S);\n\t\t\t\t\t// >>>> F >>>> --- >>>> S >>>>\n\t\t\t\t\tappendChain(F, S);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn regions;\n}\n\nmodule.exports = SegmentChainer;\n","map":{"mappings":[{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/polybooljs/lib/segment-chainer.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}}],"sources":{"../node_modules/polybooljs/lib/segment-chainer.js":"// (c) Copyright 2016, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n\n//\n// converts a list of segments into a list of regions, while also removing unnecessary verticies\n//\n\nfunction SegmentChainer(segments, eps, buildLog){\n\tvar chains = [];\n\tvar regions = [];\n\n\tsegments.forEach(function(seg){\n\t\tvar pt1 = seg.start;\n\t\tvar pt2 = seg.end;\n\t\tif (eps.pointsSame(pt1, pt2)){\n\t\t\tconsole.warn('PolyBool: Warning: Zero-length segment detected; your epsilon is ' +\n\t\t\t\t'probably too small or too large');\n\t\t\treturn;\n\t\t}\n\n\t\tif (buildLog)\n\t\t\tbuildLog.chainStart(seg);\n\n\t\t// search for two chains that this segment matches\n\t\tvar first_match = {\n\t\t\tindex: 0,\n\t\t\tmatches_head: false,\n\t\t\tmatches_pt1: false\n\t\t};\n\t\tvar second_match = {\n\t\t\tindex: 0,\n\t\t\tmatches_head: false,\n\t\t\tmatches_pt1: false\n\t\t};\n\t\tvar next_match = first_match;\n\t\tfunction setMatch(index, matches_head, matches_pt1){\n\t\t\t// return true if we've matched twice\n\t\t\tnext_match.index = index;\n\t\t\tnext_match.matches_head = matches_head;\n\t\t\tnext_match.matches_pt1 = matches_pt1;\n\t\t\tif (next_match === first_match){\n\t\t\t\tnext_match = second_match;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tnext_match = null;\n\t\t\treturn true; // we've matched twice, we're done here\n\t\t}\n\t\tfor (var i = 0; i < chains.length; i++){\n\t\t\tvar chain = chains[i];\n\t\t\tvar head  = chain[0];\n\t\t\tvar head2 = chain[1];\n\t\t\tvar tail  = chain[chain.length - 1];\n\t\t\tvar tail2 = chain[chain.length - 2];\n\t\t\tif (eps.pointsSame(head, pt1)){\n\t\t\t\tif (setMatch(i, true, true))\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (eps.pointsSame(head, pt2)){\n\t\t\t\tif (setMatch(i, true, false))\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (eps.pointsSame(tail, pt1)){\n\t\t\t\tif (setMatch(i, false, true))\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (eps.pointsSame(tail, pt2)){\n\t\t\t\tif (setMatch(i, false, false))\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (next_match === first_match){\n\t\t\t// we didn't match anything, so create a new chain\n\t\t\tchains.push([ pt1, pt2 ]);\n\t\t\tif (buildLog)\n\t\t\t\tbuildLog.chainNew(pt1, pt2);\n\t\t\treturn;\n\t\t}\n\n\t\tif (next_match === second_match){\n\t\t\t// we matched a single chain\n\n\t\t\tif (buildLog)\n\t\t\t\tbuildLog.chainMatch(first_match.index);\n\n\t\t\t// add the other point to the apporpriate end, and check to see if we've closed the\n\t\t\t// chain into a loop\n\n\t\t\tvar index = first_match.index;\n\t\t\tvar pt = first_match.matches_pt1 ? pt2 : pt1; // if we matched pt1, then we add pt2, etc\n\t\t\tvar addToHead = first_match.matches_head; // if we matched at head, then add to the head\n\n\t\t\tvar chain = chains[index];\n\t\t\tvar grow  = addToHead ? chain[0] : chain[chain.length - 1];\n\t\t\tvar grow2 = addToHead ? chain[1] : chain[chain.length - 2];\n\t\t\tvar oppo  = addToHead ? chain[chain.length - 1] : chain[0];\n\t\t\tvar oppo2 = addToHead ? chain[chain.length - 2] : chain[1];\n\n\t\t\tif (eps.pointsCollinear(grow2, grow, pt)){\n\t\t\t\t// grow isn't needed because it's directly between grow2 and pt:\n\t\t\t\t// grow2 ---grow---> pt\n\t\t\t\tif (addToHead){\n\t\t\t\t\tif (buildLog)\n\t\t\t\t\t\tbuildLog.chainRemoveHead(first_match.index, pt);\n\t\t\t\t\tchain.shift();\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif (buildLog)\n\t\t\t\t\t\tbuildLog.chainRemoveTail(first_match.index, pt);\n\t\t\t\t\tchain.pop();\n\t\t\t\t}\n\t\t\t\tgrow = grow2; // old grow is gone... new grow is what grow2 was\n\t\t\t}\n\n\t\t\tif (eps.pointsSame(oppo, pt)){\n\t\t\t\t// we're closing the loop, so remove chain from chains\n\t\t\t\tchains.splice(index, 1);\n\n\t\t\t\tif (eps.pointsCollinear(oppo2, oppo, grow)){\n\t\t\t\t\t// oppo isn't needed because it's directly between oppo2 and grow:\n\t\t\t\t\t// oppo2 ---oppo--->grow\n\t\t\t\t\tif (addToHead){\n\t\t\t\t\t\tif (buildLog)\n\t\t\t\t\t\t\tbuildLog.chainRemoveTail(first_match.index, grow);\n\t\t\t\t\t\tchain.pop();\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif (buildLog)\n\t\t\t\t\t\t\tbuildLog.chainRemoveHead(first_match.index, grow);\n\t\t\t\t\t\tchain.shift();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.chainClose(first_match.index);\n\n\t\t\t\t// we have a closed chain!\n\t\t\t\tregions.push(chain);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// not closing a loop, so just add it to the apporpriate side\n\t\t\tif (addToHead){\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.chainAddHead(first_match.index, pt);\n\t\t\t\tchain.unshift(pt);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.chainAddTail(first_match.index, pt);\n\t\t\t\tchain.push(pt);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// otherwise, we matched two chains, so we need to combine those chains together\n\n\t\tfunction reverseChain(index){\n\t\t\tif (buildLog)\n\t\t\t\tbuildLog.chainReverse(index);\n\t\t\tchains[index].reverse(); // gee, that's easy\n\t\t}\n\n\t\tfunction appendChain(index1, index2){\n\t\t\t// index1 gets index2 appended to it, and index2 is removed\n\t\t\tvar chain1 = chains[index1];\n\t\t\tvar chain2 = chains[index2];\n\t\t\tvar tail  = chain1[chain1.length - 1];\n\t\t\tvar tail2 = chain1[chain1.length - 2];\n\t\t\tvar head  = chain2[0];\n\t\t\tvar head2 = chain2[1];\n\n\t\t\tif (eps.pointsCollinear(tail2, tail, head)){\n\t\t\t\t// tail isn't needed because it's directly between tail2 and head\n\t\t\t\t// tail2 ---tail---> head\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.chainRemoveTail(index1, tail);\n\t\t\t\tchain1.pop();\n\t\t\t\ttail = tail2; // old tail is gone... new tail is what tail2 was\n\t\t\t}\n\n\t\t\tif (eps.pointsCollinear(tail, head, head2)){\n\t\t\t\t// head isn't needed because it's directly between tail and head2\n\t\t\t\t// tail ---head---> head2\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.chainRemoveHead(index2, head);\n\t\t\t\tchain2.shift();\n\t\t\t}\n\n\t\t\tif (buildLog)\n\t\t\t\tbuildLog.chainJoin(index1, index2);\n\t\t\tchains[index1] = chain1.concat(chain2);\n\t\t\tchains.splice(index2, 1);\n\t\t}\n\n\t\tvar F = first_match.index;\n\t\tvar S = second_match.index;\n\n\t\tif (buildLog)\n\t\t\tbuildLog.chainConnect(F, S);\n\n\t\tvar reverseF = chains[F].length < chains[S].length; // reverse the shorter chain, if needed\n\t\tif (first_match.matches_head){\n\t\t\tif (second_match.matches_head){\n\t\t\t\tif (reverseF){\n\t\t\t\t\t// <<<< F <<<< --- >>>> S >>>>\n\t\t\t\t\treverseChain(F);\n\t\t\t\t\t// >>>> F >>>> --- >>>> S >>>>\n\t\t\t\t\tappendChain(F, S);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t// <<<< F <<<< --- >>>> S >>>>\n\t\t\t\t\treverseChain(S);\n\t\t\t\t\t// <<<< F <<<< --- <<<< S <<<<   logically same as:\n\t\t\t\t\t// >>>> S >>>> --- >>>> F >>>>\n\t\t\t\t\tappendChain(S, F);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\t// <<<< F <<<< --- <<<< S <<<<   logically same as:\n\t\t\t\t// >>>> S >>>> --- >>>> F >>>>\n\t\t\t\tappendChain(S, F);\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif (second_match.matches_head){\n\t\t\t\t// >>>> F >>>> --- >>>> S >>>>\n\t\t\t\tappendChain(F, S);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif (reverseF){\n\t\t\t\t\t// >>>> F >>>> --- <<<< S <<<<\n\t\t\t\t\treverseChain(F);\n\t\t\t\t\t// <<<< F <<<< --- <<<< S <<<<   logically same as:\n\t\t\t\t\t// >>>> S >>>> --- >>>> F >>>>\n\t\t\t\t\tappendChain(S, F);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t// >>>> F >>>> --- <<<< S <<<<\n\t\t\t\t\treverseChain(S);\n\t\t\t\t\t// >>>> F >>>> --- >>>> S >>>>\n\t\t\t\t\tappendChain(F, S);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn regions;\n}\n\nmodule.exports = SegmentChainer;\n"},"lineCount":253}},"hash":"f7b6f05db6f018573053feaad9431624","cacheData":{"env":{}}}